#!/usr/bin/enable/env bash

# Various PATHs
if [ -d "/opt" ] ; then
  PATH="/opt:$PATH"
fi
if [ -d "/usr/local/sbin" ] ; then
  PATH="/usr/local/sbin:$PATH"
fi
if [ -d "/usr/local/bin" ] ; then
  PATH="/usr/local/bin:$PATH"
fi
if [ -d "/usr/sbin" ] ; then
  PATH="/usr/sbin:$PATH"
fi
if [ -d "/usr/bin" ] ; then
  PATH="/usr/bin:$PATH"
fi
if [ -d "/sbin" ] ; then
  PATH="/sbin:$PATH"
fi
if [ -d "/bin" ] ; then
  PATH="/bin:$PATH"
fi

# Setup variables for platform independence and host specificity
export OS=`uname -s`
# host=`hostname | cut -d. -f1`

# Find Linux distribution name and set it as global
case $OS in
  "Linux" )
    export DISTNAME=`lsb_release -d | sed -r -e 's/Description:[\t]+//' -e 's/[ ][(](.*)//' -e 's/[ ]/_/g'`
esac

# Run (Homebrew) GNU Utils on OS X
case $OS in
  "Darwin" )
    PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
    # Short of learning how to actually configure OSX, here's a hacky way to use
    # GNU manpages for programs that are GNU ones, and fallback to OSX manpages otherwise
    alias man='_() { echo $1; man -M $(brew --prefix)/opt/coreutils/libexec/gnuman $1 1>/dev/null 2>&1;  if [ "$?" -eq 0 ]; then man -M $(brew --prefix)/opt/coreutils/libexec/gnuman $1; else man $1; fi }; _';;
esac

# Export Homebrew path for OS X
case $OS in
  "Darwin" )
    PATH="/usr/local/bin:$PATH"
    PATH="/usr/local/sbin:$PATH"
esac

# Dircolors (needs GNUutils) https://github.com/seebi/dircolors-solarized#256dark
# Load the custom .dircolors
if [ -f $HOME/.dircolors ]; then
  case $OS in
    "Darwin" )
      eval `gdircolors ~/.dircolors`;;
    "Linux"  )
      eval `dircolors -b ~/.dircolors`;;
    "FreeBSD" )
      eval `gdircolors ~/.dircolors`;;
  esac
fi

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Lynx local config-file
export LYNX_CFG=~/.config/lynxrc

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Ruby GEM paths - local path takes priority over system path
if which ruby >/dev/null && which gem >/dev/null; then
  PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

# Python paths for Linux
case $OS in
  "Linux" )
    # Python paths for Linux
    PYTHONPATH=/usr/lib/python2.6/site-packages:$PYTHONPATH
    PYTHONPATH=/usr/lib/python2.7/site-packages:$PYTHONPATH
    PYTHONPATH=/usr/lib/python3.4/site-packages:$PYTHONPATH
    PYTHONPATH=/usr/lib/python3.5/site-packages:$PYTHONPATH
    export PYTHONPATH

    # Python PIP local installations
    PATH="$HOME/.local/bin:$PATH";;

    "FreeBSD" )
    # Python paths for FreeBSD
    # DO NOT USE WITH `VIRTUALENV` OR YOU WILL HAVE A BAD DAY
    # PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH
    # PYTHONPATH=/usr/local/lib/python3.5/site-packages:$PYTHONPATH
    # export PYTHONPATH

    # Python PIP local installations
    PATH="$HOME/.local/bin:$PATH"
    PATH="/usr/local/lib:$PATH";;
esac

# GPG
GPG_TTY=$(tty)
export GPG_TTY

# Needed for OS X
case $OS in
  "Darwin" )
    export PINENTRY_USER_DATA="USE_CURSES=1"
esac

# This has been completely removed and made automatic in GnuPG 2.1
# But is still needed for MUTT
export GPG_AGENT_INFO="$HOME/.gnupg/S.gpg-agent"

# SSH
export SSH_KEY_PATH="$HOME/.ssh/dsa_id"

# Use secrets file
if [ -e ~/.secrets ]; then
  source ~/.secrets
fi

# Set terminal (for i3)
export TERMINAL=gnome-terminal

# Set editors
export EDITOR=vim
export GIT_EDITOR=vim
export VISUAL=vim

# Prefered editor for local and remote sessions
SSH_CONNECTION=${TRUE:-}
if [[ -n "{$SSH_CONNECTION}" ]]; then
  export EDITOR='vim'
fi

# Usenet server
export NNTPSERVER=news.sunsite.dk

# Set bogus email for anonymous FTP
export EMAIL_ADDR='anonymous@anonymous.org'

# Set 256 colours (supported by ncurses-term)
# Terminal colors for FreeBSD using TERMINFO
case $OS in
  "FreeBSD"  )
    eval `export TERMINFO=$HOME/.terminfo/terminfo.db`;;
esac

# For the BSDs that still use `termcap`
case $OS in
  "FreeBSD"  )
    eval `export TERMCAP=$HOME/.termcap`;;
esac

# Special italic version for Gnome Terminal
# Courtsey of http://www.nerdlyweekly.com/posts/enable-italic-text-vim-tmux-gnome-terminal
case $OS in
  "Linux"  )
    eval `export TERM=xterm-256color-italic`;;
  "Darwin"  )
    eval `export TERM=xterm-256color-italic`;;
  "FreeBSD"  )
    eval `export TERM=xterm-256color-italic`;;
esac

# Workaround the lack of TERM-emulation setting in XFCE4-TERMINAL
# Setting TERM based on COLORTERM
case $COLORTERM in
xfce4-terminal) export TERM=xterm-256color-italic ;;   # this is XFCE Terminal
gnome-terminal) export TERM=xterm-256color-italic ;;   # this is gnome-terminal
wterm-xpm) export TERM=xterm-256color-italic ;;        # this is wterm
Eterm) export TERM= xterm-256color-italic ;;           # this is Eterm
1) export TERM= xterm-256color-italic ;;               # this is lxterminal, konsole, yakuake, uxterm, Mac OSX terminal, putty ...
rxvt) export TERM=xterm-256color-italic ;;             # xterm, aterm, rxvt-unicode
esac

# Colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Color definitions for `tldr`
export TLDR_COLOR_BLANK="grey"
export TLDR_COLOR_NAME="cyan"
export TLDR_COLOR_DESCRIPTION="white"
export TLDR_COLOR_EXAMPLE="yellow on_grey bold"
export TLDR_COLOR_COMMAND="yellow"
export TLDR_COLOR_PARAMETER="cyan"

# Editor for `rtv`
export RTV_EDITOR=vim

# `nmon` default modes
export NMON=cmndt1Vou.

# Auto-select the first `man` page
export MAN_POSIXLY_CORRECT=1

# Qt5 settings
export QT_QPA_PLATFORMTHEME="qt5ct"
# export QT_STYLE_OVERRIDE="gtk2"

# Path variables for `dasht`
export DASHT_DOCSETS_DIR=$HOME/.local/share/Zeal/Zeal/docsets

# Add own scipts to path variable
PATH="$HOME/.scripts:$PATH"

